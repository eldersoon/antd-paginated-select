name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      # Deixe o token disponível para todo o job (npm respeita NODE_AUTH_TOKEN)
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          # Se sua org npm exige provenance, habilite:
          # provenance: true

      - name: Install
        run: pnpm install --frozen-lockfile

      # AUTENTICAÇÃO À PROVA DE FALHAS: grava token no HOME e na raiz do projeto,
      # e fixa registry no npm e pnpm
      - name: Configure npm auth (home and project)
        run: |
          printf "//registry.npmjs.org/:_authToken=%s\nalways-auth=true\n" "$NPM_TOKEN" > ~/.npmrc
          printf "//registry.npmjs.org/:_authToken=%s\nalways-auth=true\n" "$NPM_TOKEN" > .npmrc
          npm config set registry "https://registry.npmjs.org/"
          pnpm config set registry "https://registry.npmjs.org/"

      # DIAGNÓSTICO: verifique que o registry está correto e o token está sendo lido
      - name: Sanity check auth
        run: |
          echo "node: $(node -v)"
          echo "npm:  $(npm -v)"
          echo "npm registry: $(npm config get registry)"
          echo "pnpm registry: $(pnpm config get registry || true)"

          # Confirma que existe uma linha de auth (mas sem vazar o token)
          if grep -q "_authToken=" ~/.npmrc; then echo "~/.npmrc tem _authToken"; else echo "FALTA token em ~/.npmrc" && exit 1; fi
          if grep -q "_authToken=" .npmrc; then echo "./.npmrc tem _authToken"; else echo "FALTA token em ./.npmrc" && exit 1; fi

          # Testes de rede + identidade usando o token
          npm ping
          npm whoami

      - name: Create Release PR or Publish
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm -w changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}